################################################################################
	#
	# plot_nmds.R
	#
	# Here we take in the *.nmds.axes file from the mouse stability analysis and
	# plot it in R as we did in Figure 4 of Kozich et al.
	#
	#
	# Dependencies...
	# * data/process/*/*.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.an.unique_list.thetayc.0.03.lt.ave.nmds.axes
	#
	# Produces...
	# * results/figures/*.figure4.png
	#
	################################################################################
		# Commenting Code Responses 
	# Three things done stylistically well
	# 1) Script name is consistently written in snake case.
	# 2) In the header dependencies are given. (Although not the soft wear version/packages needed)
	# 3) The script says its input and output in the header.
	
	# Three things that could be improved
	# 1) Listing version of R used and any needed packages with date those packages were published in the dependencies.
	# 2) Not closing all and clearing all stored variables at the start of the script.
	# 3) Hard coding numbers instead of giving them names. Then not leaving ranges of viable inputs for those variables.
	# 4) Not giving reference and location of test data in header that the script can be tried with and is known to work.
	
	# Assessment of readability of R script
	# This script is readable if you know R well. The introductory block was good except missing the system compatibilities. 
	# Having the author and date would also be good addition. If I am reading the syntax correctly, the variable names are 
	# consistently written snake case and seem to be meaning full. (I am not super comfortable with R and think plot.axes are 
	# not being used like variables so the period is okay. At first I thought they were being used as a way to separate that data 
	# into variable bin in which case the plot.axes should be plot_axes, but on closer examination donâ€™t think that is what they 
	# were doing.) To be able to test the script works on my computer a test data set should be linked too.

	##############################################################################

# Uploades data and functions needed
	plot_nmds <- function (axes_file){
	    axes <- read.table(file=axes_file, header=T, row.names=1)
	    day <- as.numeric(gsub(".*D(\\d*)$", "\\1", rownames(axes)))
	
# Sets range of data to input into functions
	    early <- day <= 10
	    late <- day >= 140 & day <= 150
	
# Creates plots of data for the given inputs into functions. 
	    plot.axes <- axes[early | late, ]
	    plot.day <- day[early | late]
	    plot.early <- early[early | late]
	    plot.late <- late[early | late]
	
# Sets plots for the 21st and 19th element of the processed data
	    pch <- vector()
	    pch[plot.early] <- 21
	    pch[plot.late] <- 19
	
# Creates output file and save it as a png
	    output_file_stub <- strsplit(axes_file, split="\\/")[[1]][3]
	    output_file <- paste0("results/figures/", output_file_stub, ".figure4.png")
	
# Generates the plot to save as a png
	    png(file=output_file)
	    plot(plot.axes$axis2~plot.axes$axis1, pch=pch, xlab="PCoA Axis 1", ylab="PCoA Axis 2")
	    legend(x=max(plot.axes$axis1)-0.125, y=min(plot.axes$axis2)+0.125, legend=c("Early", "Late"), pch=c(21,19))
	    dev.off()
	}
